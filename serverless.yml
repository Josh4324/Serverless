service: chatscrum
# app and org for use with dashboard.serverless.com
app: chatscrum-app
org: adesanyajoshua

provider:
  name: aws
  runtime: nodejs12.x

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Scan"
      Resource:
        - Fn::GetAtt: [ChatTable, Arn]
    - Effect: Allow
      Action:
        - "execute-api:ManageConnections"
      Resource:
        - "arn:aws:execute-api:*:*:**/@connections/*"

functions:
  connectionHandler:
    handler: handler.connectionHandler
    events:
    - websocket:
        route: $connect
    - websocket:
        route: $disconnect
  defaultHandler:
    handler: handler.defaultHandler
    events:
    - websocket:
        route: $default
  sendMessageHandler:
    handler: handler.sendMessageHandler
    events:
      - websocket:
          route: sendMessage

resources:
  Resources:
    ChatTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "connectionId"
          AttributeType: "S"
        - AttributeName: "user"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "connectionId"
          KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        TableName: chatIdTable
    MessageTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "room"
          AttributeType: "S"
        - AttributeName: "user"
          AttributeType: "S"
        - AttributeName: "message"
          AttributeType: "S"
        - AttributeName: "profile-picture"
          AttributeType: "S"
        - AttributeName: "dateTime"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "room"
          KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        TableName: roomTable
